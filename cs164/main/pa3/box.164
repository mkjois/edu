##
# Box: The superclass of VBox and HBox, both of which share how
# they're rendered and traversed
#
def Box = Object:new({ \
  x=0, y=0, width=0, height=0, color="black", weight = 0, weight2 = 0, opacityValue = 0, maxOpacityValue = 0, text="" \
})

##
# Box instances each have their own list of children.
#
Box.new = lambda(self, obj) {
  obj = Object.new(self, obj)
  if (not("children" in obj)) { obj.children = {} }
  obj
}

Box.visitInPreorder = lambda(self,f) {
  # TODO: implement me!
  f(self)
  for (child in self.children) {
      child:visitInPreorder(f)
  }
}

Box.visitInPostorder = lambda(self,f) {
  # TODO: implement me!
  for (child in self.children) {
      child:visitInPostorder(f)
  }
  f(self)
}

Box.addChild = lambda(self, child) {
  #print "Adding " + child.text + " as a child of " + self.text
  append(self.children, child)
  child.parent = self
  self
}

Box.pass1_ComputeWeightAndColor = lambda(self) {
  # TODO: implement me!
  # Right now, this pass only propogates weight.  What else
  # should it do?

  # for leaf nodes (this code doesn't matter for non-leaf nodes)
  self.maxOpacityValue = abs(self.weight2)
  self.opacityValue = abs(self.weight2)
  if (self.weight2 < 0) {
      self.color = "red"
  } else {
      self.color = "green"
  }

  # for non-leaf nodes (leaf nodes won't enter this loop)
  for (child in self.children) {
    self.weight = self.weight + child.weight
    self.weight2 = 0
    self.maxOpacityValue = max(self.maxOpacityValue, child.maxOpacityValue)
  }
}

Box.pass3_Render = lambda(self) {
  # TODO: implement me!
  # TODO: add logic for show/hide text based on box size

  # this works for all boxes because non-leaf nodes have self.opacityValue = 0
  js drawBox(self.x, self.y, self.width, self.height, self.color, self.opacityValue, self.maxOpacityValue, self.text)
  if (self.height > 12 && len(self.children) == 0) {
      def textX = self.x
      def textY = self.y + self.height
      js drawText(textX, textY, self.text, 10)
  }
}

def abs(x) {
    if (x < 0) {
        0 - x
    } else {
        x
    }
}
